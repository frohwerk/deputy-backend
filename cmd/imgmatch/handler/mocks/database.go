// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/frohwerk/deputy-backend/internal/database (interfaces: ImageLinker)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	database "github.com/frohwerk/deputy-backend/internal/database"
	gomock "github.com/golang/mock/gomock"
)

// MockImageLinker is a mock of ImageLinker interface.
type MockImageLinker struct {
	ctrl     *gomock.Controller
	recorder *MockImageLinkerMockRecorder
}

// MockImageLinkerMockRecorder is the mock recorder for MockImageLinker.
type MockImageLinkerMockRecorder struct {
	mock *MockImageLinker
}

// NewMockImageLinker creates a new mock instance.
func NewMockImageLinker(ctrl *gomock.Controller) *MockImageLinker {
	mock := &MockImageLinker{ctrl: ctrl}
	mock.recorder = &MockImageLinkerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockImageLinker) EXPECT() *MockImageLinkerMockRecorder {
	return m.recorder
}

// AddLink mocks base method.
func (m *MockImageLinker) AddLink(arg0, arg1 string) (*database.ImageLink, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddLink", arg0, arg1)
	ret0, _ := ret[0].(*database.ImageLink)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddLink indicates an expected call of AddLink.
func (mr *MockImageLinkerMockRecorder) AddLink(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddLink", reflect.TypeOf((*MockImageLinker)(nil).AddLink), arg0, arg1)
}
